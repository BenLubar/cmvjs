// AUTOMATICALLY GENERATED FILE. DO NOT EDIT.

package main

var mainjs = js(asset.init(asset{Name: "main.js", Content: "" +
	"var CMV = function() {\n\t\"use strict\";\n\n\tvar worker = new Worker('worker.js');\n\tvar movies = {};\n\tworker.onmessage = function(e) {\n\t\tvar frame = e.data.frame;\n\t\tif (frame) {\n\t\t\tvar movie = movies[e.data.file];\n\t\t\tif (!movie) {\n\t\t\t\tconsole.log('no movie for ' + e.data.file);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar prev = movie.frames[movie.frames.length - 1];\n\t\t\tfor (var i = 0; prev != null && i < prev.data.length; i++) {\n\t\t\t\tif (frame.data[i] != prev.data[i]) {\n\t\t\t\t\tprev = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prev != null) {\n\t\t\t\tframe = prev;\n\t\t\t}\n\t\t\tmovie.frames.push(frame);\n\t\t\tmovie.notify.forEach(function(f) {\n\t\t\t\tf(frame, movie);\n\t\t\t});\n\t\t}\n\t}\n\n\tfunction startStream(path, callback) {\n\t\tvar movie = movies[path];\n\t\tif (movie) {\n\t\t\tconsole.log('stream already started for ' + path);\n\t\t\tmovie.notify.push(callback);\n\t\t\tmovie.frames.forEach(function(frame) {\n\t\t\t\tcallback(frame, movie);\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\t\tconsole.log('starting stream for ' + path);\n\t\tmovies[path] = {frames: [], notify: [callback]};\n\t\tworker.postMessage({file: path, mode: 'start'});\n\t}\n\n\tfunction stopStream(path, callback) {\n\t\tvar movie = movies[path];\n\t\tif (!movie) {\n\t\t\tconsole.log('no stream for ' + path);\n\t\t\treturn;\n\t\t}\n\n\t\tmovie.notify = movie.notify.filter(function(f) {\n\t\t\treturn f != callback;\n\t\t});\n\n\t\tif (!movie.notify.length) {\n\t\t\tconsole.log('stopping stream for ' + path);\n\t\t\tworker.postMessage({file: path, mode: 'stop'});\n\t\t\tdelete movies[path];\n\t\t} else {\n\t\t\tconsole.log('stream for ' + path + ' has ' + movie.notify.length + ' remaining subscriptions');\n\t\t}\n\t}\n\n\tvar colors = [\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[0, 0, 128],\n\t\t\t[0, 128, 0],\n\t\t\t[0, 128, 128],\n\t\t\t[128, 0, 0],\n\t\t\t[128, 0, 128],\n\t\t\t[128, 128, 0],\n\t\t\t[192, 192, 192]\n\t\t],\n\t\t[\n\t\t\t[128, 128, 128],\n\t\t\t[0, 0, 255],\n\t\t\t[0, 255, 0],\n\t\t\t[0, 255, 255],\n\t\t\t[255, 0, 0],\n\t\t\t[255, 0, 255],\n\t\t\t[255, 255, 0],\n\t\t\t[255, 255, 255]\n\t\t]\n\t];\n\n\tvar tileset = new Image();\n\ttileset.src = 'curses_800x600.png';\n\ttileset.onload = function() {\n\t\tvar tileWidth = tileset.width / 16;\n\t\tvar tileHeight = tileset.height / 16;\n\t\tvar tiles = function() {\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tcanvas.width = tileset.width;\n\t\t\tcanvas.height = tileset.height;\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tctx.drawImage(tileset, 0, 0);\n\t\t\tvar tiles = [];\n\t\t\tfor (var y = 0; y < 16; y++) {\n\t\t\t\tfor (var x = 0; x < 16; x++) {\n\t\t\t\t\ttiles.push(ctx.getImageData(x * tileWidth, y * tileHeight, tileWidth, tileHeight));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn tiles;\n\t\t}();\n\n\t\tvar rendering = false;\n\t\tvar canvas = document.createElement('canvas');\n\t\tvar ctx = null;\n\t\tvar slider = document.createElement('input');\n\t\tslider.type = 'range';\n\t\tslider.min = slider.max = slider.value = 0;\n\t\tslider.disabled = true;\n\t\tslider.oninput = slider.onchange = function() {\n\t\t\tif (!rendering) {\n\t\t\t\tseek(+slider.value);\n\t\t\t}\n\t\t};\n\t\tvar msPerFrame = 20;\n\t\tvar timeDisplay = document.createElement('span');\n\t\tvar renderTick = null;\n\t\tvar currentFrame = -1;\n\t\tvar seek = null;\n\t\tvar mousedown = false;\n\t\tslider.onmousedown = function() {\n\t\t\tmousedown = true;\n\t\t};\n\t\tslider.onmouseup = function() {\n\t\t\tmousedown = false;\n\t\t}\n\t\tvar dirty = false;\n\t\tvar paused = false;\n\t\tvar pauseButton = document.createElement('button');\n\t\tpauseButton.innerHTML = '\u25ae\u25ae';\n\t\tpauseButton.onclick = function() {\n\t\t\tpaused = !paused;\n\t\t\tdirty = true;\n\t\t\tif (paused) {\n\t\t\t\tpauseButton.innerHTML = '\u25b6';\n\t\t\t} else {\n\t\t\t\tpauseButton.innerHTML = '\u25ae\u25ae';\n\t\t\t}\n\t\t};\n\n\t\tvar imageData = null;\n\t\tvar renderFrame = function(frame) {\n\t\t\tvar mid = frame.width * frame.height;\n\n\t\t\tfor (var tx = 0; tx < frame.width; tx++) {\n\t\t\t\tvar off1 = tx * frame.height;\n\t\t\t\tfor (var ty = 0; ty < frame.height; ty++) {\n\t\t\t\t\tvar off2 = off1 + ty;\n\t\t\t\t\tvar off3 = off2 + mid;\n\n\t\t\t\t\tvar t = tiles[frame.data[off2]];\n\t\t\t\t\tvar fg = colors[frame.data[off3] >> 6][frame.data[off3] & 7];\n\t\t\t\t\tvar bg = colors[0][(frame.data[off3] >> 3) & 7];\n\n\t\t\t\t\tfor (var x = 0; x < tileWidth; x++) {\n\t\t\t\t\t\tfor (var y = 0; y < tileHeight; y++) {\n\t\t\t\t\t\t\tvar off = (x + y * tileWidth) * 4;\n\t\t\t\t\t\t\tvar r = t.data[off + 0], g = t.data[off + 1], b = t.data[off + 2], a = t.data[off + 3];\n\t\t\t\t\t\t\tif (r == 255 && g == 0 && b == 255 && a == 255) {\n\t\t\t\t\t\t\t\tr = g = b = a = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toff = ((x + tx * tileWidth) + (y + ty * tileHeight) * imageData.width) * 4;\n\t\t\t\t\t\t\timageData.data[off + 0] = (r * a * fg[0] / 255 + (255 - a) * bg[0]) / 255;\n\t\t\t\t\t\t\timageData.data[off + 1] = (g * a * fg[1] / 255 + (255 - a) * bg[1]) / 255;\n\t\t\t\t\t\t\timageData.data[off + 2] = (b * a * fg[2] / 255 + (255 - a) * bg[2]) / 255;\n\t\t\t\t\t\t\timageData.data[off + 3] = 255;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tctx.putImageData(imageData, 0, 0);\n\t\t};\n\n\t\tvar formatTime = function(t) {\n\t\t\tvar seconds = Math.floor(t * 10) / 10 % 60, minutes = Math.floor(t / 60);\n\t\t\tif (Math.floor(seconds) == seconds) {\n\t\t\t\tseconds += '.0';\n\t\t\t}\n\t\t\tif (seconds < 10) {\n\t\t\t\tseconds = '0' + seconds;\n\t\t\t}\n\t\t\tseconds = String(seconds).substring(0, 4);\n\t\t\treturn minutes + ':' + seconds;\n\t\t};\n\n\t\tvar render = function(movie) {\n\t\t\trendering = true;\n\n\t\t\tif (!mousedown) {\n\t\t\t\tslider.value = currentFrame;\n\t\t\t}\n\t\t\tvar add = 1;\n\t\t\tif (dirty) {\n\t\t\t\tvar start = +new Date();\n\t\t\t\trenderFrame(movie.frames[currentFrame]);\n\t\t\t\ttimeDisplay.innerHTML = formatTime(currentFrame * msPerFrame / 1000) + ' / ' + formatTime((movie.frames.length - 1) * msPerFrame / 1000);\n\t\t\t\tdirty = false;\n\t\t\t\tadd += Math.floor((new Date() - start) / msPerFrame);\n\t\t\t}\n\n\t\t\tif (!paused && !mousedown && movie.frames.length > currentFrame + 1) {\n\t\t\t\tcurrentFrame += add;\n\t\t\t\tcurrentFrame = Math.min(currentFrame, movie.frames.length - 1);\n\t\t\t\tdirty = true;\n\t\t\t}\n\n\t\t\trendering = false;\n\t\t};\n\n\t\tvar once = function(frame, movie) {\n\t\t\tcanvas.width = tileWidth * frame.width;\n\t\t\tcanvas.height = tileHeight * frame.height;\n\t\t\tctx = canvas.getContext('2d');\n\t\t\timageData = ctx.createImageData(canvas.width, canvas.height);\n\t\t\tslider.disabled = false;\n\n\t\t\tseek = function(tick) {\n\t\t\t\tcurrentFrame = tick;\n\t\t\t\tclearTimeout(renderTick);\n\t\t\t\trenderTick = setInterval(render.bind(null, movie), msPerFrame);\n\t\t\t\tdirty = true;\n\t\t\t\trender(movie);\n\t\t\t};\n\t\t\tseek(0);\n\n\t\t\tonce = function(frame, movie) {};\n\t\t};\n\n\t\tstartStream('last_record.cmv', function(frame, movie) {\n\t\t\tonce(frame, movie);\n\t\t\tslider.max = movie.frames.length - 1;\n\t\t\tdirty = true;\n\t\t});\n\n\t\tdocument.body.appendChild(canvas);\n\t\tdocument.body.appendChild(pauseButton);\n\t\tdocument.body.appendChild(timeDisplay);\n\t\tdocument.body.appendChild(slider);\n\t};\n\n\treturn {\n\t\tstart: startStream,\n\t\tstop: stopStream\n\t};\n}();\n" +
	""}))
